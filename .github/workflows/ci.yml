name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --timeout=10m --out-format=colored-line-number
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, 386]
        exclude:
          - os: macos-latest
            arch: 386
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install 386 dependencies on Ubuntu
        if: matrix.arch == '386' && matrix.os == 'ubuntu-latest'
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y gcc-multilib libc6-dev-i386
      - name: Install MinGW 32-bit on Windows
        if: matrix.arch == '386' && matrix.os == 'windows-latest'
        shell: powershell
        env:
          GETH_MINGW: 'C:\ProgramData\chocolatey\lib\mingw\tools\install'
          GETH_CC: 'C:\ProgramData\chocolatey\lib\mingw\tools\install\bin\gcc.exe'
          PATH: 'C:\ProgramData\chocolatey\lib\mingw\tools\install\bin;C:\Program Files (x86)\NSIS\;${{ env.PATH }}'
        run: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine")
          choco install mingw --version 8.1.0 --forcex86
          Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23.0'
          cache: false
          architecture: ${{ matrix.arch }}
      - name: Run tests
        run: make test
